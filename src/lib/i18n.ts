import { languageStorage } from './storage';

type Lang = 'en' | 'zh';

const strings: Record<Lang, Record<string, string>> = {
  en: {
  budget_exists_title: 'Budget Already Exists',
  budget_exists_desc: 'You already have a budget for {category} this month.',
  budget_created_title: 'Budget Created! üí∞',
  budget_created_desc: '{amount} budget set for {category}.',
  budget_updated_title: 'Budget Updated! ‚úèÔ∏è',
  budget_updated_desc: 'Your budget limit has been updated.',
  edit_budget: 'Edit Budget',
  edit_budget_prompt: 'Enter new budget limit:',
  over_by: 'Over by ',
  remaining: 'Remaining: ',
  almost_there: 'Almost There!',
  over_budget: 'Over Budget!',
    expense_categories: 'Expense Categories',
    app_title: 'SmartSaver',
    settings_title: 'Settings',
    appearance: 'Appearance',
    dark_mode: 'Dark Mode',
    dark_mode_desc: 'Switch between light and dark themes',
    notifications_title: 'Notifications',
    notifications_desc: 'Get reminders for expense logging and savings goals',
    data_management: 'Data Management',
    export_backup: 'Export Data as Backup',
    import_backup: 'Import Backup Data',
    delete_all_data: 'Delete All Data',
    delete_confirm_title: 'Delete All Data',
    delete_confirm_body: 'This will permanently delete all your savings goals, expenses, and budgets. This action cannot be undone.',
    help_support: 'Help & Support',
    about_title: 'About',
    version_label: 'Version',
    built_with: 'Built with ‚ù§Ô∏è for better financial habits',
    savings_goals: 'Savings Goals',
    track_milestones: 'Track your financial milestones',
    no_savings_goals: 'No savings goals yet',
    create_first_goal: 'Create Your First Goal',
  expense_tracking: 'Expense Tracking',
  monitor_spending: 'Monitor your spending patterns',
  add_expense: 'Add Expense',
  add_first_expense: 'Add Your First Expense',
  no_expenses_found: 'No expenses found',
  start_tracking_expenses: "Start tracking your expenses to see where your money goes!",
  view_history: 'View History',
  description_label: 'Description',
  amount_label: 'Amount',
  category_label: 'Category',
  date_label: 'Date',
  select_category: 'Select a category',
  all_categories: 'All Categories',
  add_expense_success_title: 'Expense Logged! üí≥',
  add_expense_success_desc: ' has been logged.',
  expense_deleted: 'Expense Deleted',
  has_been_removed: 'has been removed.',
  this_month: 'This Month',
  total_filtered: 'Total Filtered',
  add_new_goal: 'Create New Goal',
  create_goal: 'Create Goal',
  update_goal: 'Update Goal',
  goal_name: 'Goal Name',
  target_amount: 'Target Amount',
  current_amount: 'Current Amount',
  target_date: 'Target Date',
  add_amount_prompt: 'Enter amount to add:',
  progress: 'Progress',
  goal_completed: 'Goal Completed! üéâ',
  progress_updated: 'Progress Updated! üí∞',
  congrats_reached: 'Congratulations! You\'ve reached your "{name}" goal!',
  added_amount: 'Added',
  to_goal: 'to',
  has_been_updated: 'has been updated successfully.',
  food_and_dining: 'Food & Dining',
  transport: 'Transport',
  entertainment: 'Entertainment',
  shopping: 'Shopping',
  bills_utilities: 'Bills & Utilities',
  healthcare: 'Healthcare',
  education: 'Education',
  other: 'Other',
  category: 'category',
  budget_management: 'Budget Management',
  control_monthly_spending: 'Control your monthly spending',
  create_new_budget: 'Create New Budget',
  no_budgets_set: 'No budgets set',
  create_first_budget: 'Create Your First Budget',
  add_budget: 'Add Budget',
  view_reports: 'View Reports',
  potential_annual_savings: 'Potential Annual Savings',
  insights: 'insights',
  monthly_impact: 'Monthly Impact',
  time_saved: 'Time Saved',
  ai_advisor_title: 'AI Financial Advisor',
  ai_advisor_desc: 'Get personalized savings advice',
  ai_welcome: 'Welcome to your AI Financial Advisor!',
  ai_welcome_desc: "Ask me anything about your savings plan, budget, or financial goals. I'll analyze your data and provide personalized advice.",
  welcome_smart_planning_title: 'Welcome to Smart Financial Planning!',
  welcome_smart_planning_msg: 'Start by tracking your income and expenses for a few days to get personalized advice.',
  onboarding_action_1: 'Add your monthly income',
  onboarding_action_2: 'Track daily expenses for one week',
  onboarding_action_3: 'Set your first savings goal',
  try_asking: 'Try asking:',
  ai_is_thinking: 'AI is thinking...',
  ai_no_data: 'Add some expenses and income to get personalized advice!',
  generate_advice: 'Generate Advice',
  priority_high: 'High',
  priority_medium: 'Medium',
  priority_low: 'Low',
  key_features: 'Key Features',
  getting_started_1: 'Start by adding your first expense to see how easy tracking can be',
  getting_started_2: 'Set up your first savings goal to have something to work toward',
  getting_started_3: 'Check the dashboard daily to monitor your financial progress',
  howto_track_title: 'Track Expenses',
  howto_track_desc: 'Add your daily expenses by category. Track where your money goes to identify spending patterns.',
  howto_track_step_1: "Go to the Expenses tab",
  howto_track_step_2: "Tap the '+' button to add a new expense",
  howto_track_step_3: 'Enter amount, select category, and add description',
  howto_track_step_4: 'View all your expenses in an organized list',
  howto_goals_title: 'Set Savings Goals',
  howto_goals_desc: 'Create specific savings targets and track your progress toward achieving them.',
  howto_goals_step_1: 'Navigate to the Goals tab',
  howto_goals_step_2: "Tap 'Add New Goal' to create a savings target",
  howto_goals_step_3: 'Set your goal amount and target date',
  howto_goals_step_4: 'Add money to goals to track progress',
  howto_analytics_title: 'View Analytics',
  howto_analytics_desc: 'Analyze your spending with interactive charts and detailed breakdowns.',
  howto_analytics_step_1: 'Check the Dashboard for overview charts',
  howto_analytics_step_2: 'View pie charts showing expense categories',
  howto_analytics_step_3: 'Track savings progress over time',
  howto_analytics_step_4: 'Monitor budget vs actual spending',
  // Expense chart strings
  expense_chart_title: 'Expense Categories',
  no_expense_data: 'No expense data available',
  start_logging_expenses: 'Start logging expenses to see your spending breakdown',
  percent_of_total: '({percent}% of total)',
  categories_label: 'Categories',
  largest_category_label: 'Largest Category',
  total_label: 'Total: {value}',
  howto_badges_title: 'Earn Badges',
  howto_badges_desc: 'Build saving streaks and earn badges for consistent financial habits.',
  howto_badges_step_1: 'Save money daily to build streaks',
  howto_badges_step_2: 'Earn badges for 7-day saving streaks',
  howto_badges_step_3: 'View your badges in the dashboard',
  howto_badges_step_4: 'Challenge yourself to maintain longer streaks',
  howto_challenges_title: 'Take Challenges',
  howto_challenges_desc: 'Participate in weekly and monthly challenges to improve your financial habits.',
  howto_challenges_step_1: 'View active challenges on the dashboard',
  howto_challenges_step_2: "Join challenges like 'No-spend weekend'",
  howto_challenges_step_3: 'Track your progress throughout the challenge',
  howto_challenges_step_4: 'Earn rewards for completing challenges',
  howto_export_title: 'Export Data',
  howto_export_desc: 'Export your financial data to CSV or Excel for external analysis.',
  howto_export_step_1: 'Go to Settings',
  howto_export_step_2: "Select 'Export Data'",
  howto_export_step_3: 'Choose format (CSV or Excel)',
  howto_export_step_4: 'Download your financial records',
  pro_tips_title: 'Pro Tips',
  pro_tip_1: 'Set up notifications to remember daily expense tracking',
  pro_tip_2: 'Review your spending patterns weekly to identify areas for improvement',
  pro_tip_3: 'Use categories consistently for better analytics',
  pro_tip_4: 'Set realistic savings goals that you can actually achieve',
  pro_tip_5: 'Take challenges to make saving more engaging and fun',
  tip_savings_great: "üéâ You're doing great with your savings goals!",
  tip_budget_close: "‚ö†Ô∏è You're close to your monthly budget limit",
  tip_savings_foundation: "üí™ You've built a solid savings foundation!",
  how_to_use: '‰ΩøÁî®ÊñπÂºèÔºö',
    create_new_goal: 'Create New Goal',
    greeting: 'Good day',
    financial_overview: "Here's your financial overview",
    total_savings: 'Total Savings',
    monthly_budget: 'Monthly Budget',
    spent: 'Spent',
    budget: 'Budget',
    savings_goals_progress: 'Savings Goals Progress',
    smart_tip: 'Smart Tip',
    recent_expenses: 'Recent Expenses',
    page_not_found: 'Oops! Page not found',
    return_home: 'Return to Home',
  monthly_impact_label: 'Monthly Impact',
  time_saved_label: 'Time Saved',
  view_all_insights: 'View All {n} Insights',
  error_ai_response: 'Error',
  error_ai_response_desc: 'Failed to get AI response. Please try again.',
  conversation_cleared_title: 'Conversation cleared',
  conversation_cleared_desc: 'Your chat history has been cleared.',
  suggested_q_1: "How can I save more money each month?",
  suggested_q_2: "Am I staying within my budget?",
  suggested_q_3: "What's my best savings strategy?",
  suggested_q_4: "How can I reach my financial goals faster?",
  suggested_q_5: "Which expenses should I cut back on?",
  input_placeholder: 'Ask about your saving plan...',
    goal_created_title: 'Goal Created! üéØ',
    goal_created_desc: ' has been added to your savings goals.',
    goal_updated_title: 'Goal Updated! ‚úèÔ∏è',
    goal_deleted_title: 'Goal Deleted',
    progress_label: 'Progress',
    overdue: 'Overdue',
    days_left: '{n} days left',
    add_50: '+$50',
    add_100: '+$100',
    custom: 'Custom',
    projection_title: 'Future Projection',
    principal: 'Current Principal',
    monthly: 'Monthly Contribution',
    rate: 'Annual Rate (e.g. 0.05 = 5%)',
    years: 'Years',
    goal_amount: 'Goal Amount (optional)',
    savings_rate: 'Savings Rate (0-1, optional)',
    emergency_months: 'Emergency Fund (months, optional)',
    monthly_living: 'Monthly Living Expense (optional)',
    run: 'Run Projection',
    formula: 'Formula',
    estimated_future_value: 'Estimated Future Value',
    generated_at: 'Generated at',
    recommendation: 'Recommendation',
    settings_language: 'Language',
    language_en: 'English',
    language_zh: '‰∏≠Êñá'
    ,
    rec_overview: 'Based on current plan you will have about {value}, achievement ~{percent}%',
    rec_savings_low: 'Warning: savings rate is low, consider reviewing discretionary spending',
    rec_savings_ok: 'Good: savings rate is healthy, keep it up!',
    rec_emergency_low: 'Recommend topping up emergency fund',
    rec_emergency_ok: 'Emergency fund sufficient; consider investing surplus'
    ,
  // AI advice messages
  rec_boost_title: 'Boost Your Savings Rate',
  rec_boost_msg: 'You\'re currently saving {savings}% of your income. Experts recommend saving at least {target}%.\nYou need to reduce spending by {needed} monthly to reach this target.',
  action_review_largest_categories: 'Review largest expense categories',
  action_cancel_subscriptions: 'Cancel unused subscriptions',
  action_cook_at_home: 'Cook at home more often',
  action_auto_savings: 'Set up automatic savings transfers',
  action_review_recent_purchases: 'Review recent purchases',
  action_identify_one_time: 'Identify one-time vs recurring increases',
  action_set_spending_alerts: 'Set spending alerts for top categories',
  action_reduce_shortfall: 'Reduce spending by {shortfall}/month',
  action_extend_deadline: 'Consider extending goal deadline',
  action_find_income: 'Find additional income sources',
  action_increase_goal_target: 'Increase goal target amount',
  action_set_new_goal: 'Set a new savings goal',
  action_consider_investing: 'Consider investing excess savings',
  action_budget_set_alerts: 'Set spending alerts at 80% of {category} budget',
  action_reduce_nonessential: 'Review and reduce non-essential purchases',
  action_find_cheaper_alternatives: 'Look for cheaper alternatives',
  action_consider_increasing_budget: 'Consider increasing budget if necessary',
  action_follow_50_30_20: 'Follow 50/30/20 rule: 50% needs, 30% wants, 20% savings',
  action_reduce_discretionary_budgets: 'Reduce budgets in discretionary categories',
  action_prioritize_essential: 'Prioritize essential vs non-essential expenses',
action_food_1: 'Cook at home 2-3 more times per week',
  action_food_2: 'Plan meals and create shopping lists',
  action_food_3: 'Buy generic brands and shop sales',
  action_food_4: 'Reduce dining out and takeaway orders',

  action_transport_1: 'Use public transport or bike when possible',
  action_transport_2: 'Combine errands into single trips',
  action_transport_3: 'Consider carpooling or ride-sharing',
  action_transport_4: 'Maintain your car to improve fuel efficiency',

  action_entertainment_1: 'Look for free community events',
  action_entertainment_2: 'Use streaming services instead of movie theaters',
  action_entertainment_3: 'Host potluck dinners instead of going out',
  action_entertainment_4: 'Take advantage of happy hours and discounts',

  action_shopping_1: 'Use the 24-hour rule for non-essential purchases',
  action_shopping_2: 'Shop with a list and stick to it',
  action_shopping_3: 'Compare prices and look for discounts',
  action_shopping_4: 'Buy quality items that last longer',

  action_bills_1: 'Review and cancel unused subscriptions',
  action_bills_2: 'Negotiate better rates with providers',
  action_bills_3: 'Switch to energy-efficient appliances',
  action_bills_4: 'Consider bundling services for discounts',

  action_healthcare_1: 'Use preventive care to avoid bigger costs',
  action_healthcare_2: 'Compare prices for medications and procedures',
  action_healthcare_3: 'Use generic medications when available',
  action_healthcare_4: 'Maximize your insurance benefits',

  action_education_1: 'Look for free online courses and resources',
  action_education_2: 'Buy used textbooks or rent them',
  action_education_3: 'Apply for scholarships and grants',
  action_education_4: 'Take advantage of employer education benefits',

  action_other_1: 'Categorize expenses to identify patterns',
  action_other_2: 'Set a monthly limit for miscellaneous spending',
  action_other_3: 'Review recurring charges regularly',
  action_other_4: 'Question the necessity of each purchase',

  rec_spending_increase_title: 'Spending Increase Alert',
  rec_spending_increase_msg: 'Your spending increased by {increase} ({percent}%) compared to last month. Let\'s identify what changed.',

  rec_goal_timeline_title: '{name} Timeline Risk',
  rec_goal_timeline_msg: 'To reach {name} by {date}, you need to save {required}/month. You\'re currently saving {current}/month. You need an additional {shortfall}/month.',
  

  rec_goal_ahead_title: '{name} Ahead of Schedule!',
  rec_goal_ahead_msg: 'Great news! You\'re on track to reach {name} early. Consider increasing the target or starting a new goal.',

  rec_budget_exceeded_title: '{category} Budget Exceeded',
  rec_budget_exceeded_msg: 'You\'ve overspent in {category} by {overBudget} this month. Your budget was {budget}, but you spent {spent}.',
 

  rec_budget_imbalance_title: 'Budget vs Income Imbalance',
  rec_budget_imbalance_msg: 'Your total budget ({total}) is {percent}% of your income. This leaves little room for savings and unexpected expenses.',

  rec_category_high_title: 'High {category} Spending',
  rec_category_high_msg: 'Your {category} spending ({amount}) is {percent} above typical levels. Reducing by {reduction}% could save {potential} monthly.',

  
    // Income input
    monthly_income_title: 'Monthly Income',
    add_income_button: 'Add Income',
    edit_income_title: 'Edit Income',
    add_income_title: 'Add Income Source',
    income_source_label: 'Income Source',
    source_placeholder: 'e.g., Salary, Freelance, Side hustle',
    monthly_amount_label: 'Monthly Amount',
    amount_placeholder: '0.00',
    recurring_label: 'Recurring monthly income',
    recurring_badge: 'Recurring',
    total_monthly_income: 'Total Monthly Income',
    cancel: 'Cancel',
    add_income_action: 'Add Income',
    update_income_action: 'Update Income',
    income_empty_hint: 'Add your income sources to get better financial insights',
    income_fill_all_fields: 'Please fill in all fields',
    income_amount_gt_zero: 'Amount must be greater than 0',
    income_updated: 'Income updated successfully',
    income_added: 'Income added successfully',
    income_deleted: 'Income deleted',
    currency_unit: 'NT$',
    language_updated: 'Language updated'
  },
  zh: {
  budget_exists_title: 'È†êÁÆóÂ∑≤Â≠òÂú®',
  budget_exists_desc: 'Êú¨Êúà„Äå{category}„ÄçÂ∑≤Ë®≠ÂÆöÈ†êÁÆó„ÄÇ',
  budget_created_title: 'È†êÁÆóÂª∫Á´ãÊàêÂäüÔºÅ',
  budget_created_desc: 'Â∑≤ÁÇ∫„Äå{category}„ÄçË®≠ÂÆö {amount} È†êÁÆó„ÄÇ',
  budget_updated_title: 'È†êÁÆóÂ∑≤Êõ¥Êñ∞ ‚úèÔ∏è',
  budget_updated_desc: 'ÊÇ®ÁöÑÈ†êÁÆó‰∏äÈôêÂ∑≤Êõ¥Êñ∞„ÄÇ',
  edit_budget: 'Á∑®ËºØÈ†êÁÆó',
  edit_budget_prompt: 'Ë´ãËº∏ÂÖ•Êñ∞ÁöÑÈ†êÁÆó‰∏äÈôêÔºö',
  over_by: 'Ë∂ÖÂá∫ ',
  remaining: 'Ââ©È§òÔºö',
  almost_there: 'Âø´ÈÅîÊ®ô‰∫ÜÔºÅ',
  over_budget: 'Â∑≤Ë∂ÖÊîØÔºÅ',
    app_title: 'SmartSaver',
    settings_title: 'Ë®≠ÂÆö',
    appearance: 'Â§ñËßÄ',
    dark_mode: 'Ê∑±Ëâ≤Ê®°Âºè',
    dark_mode_desc: 'ÂàáÊèõÊ∑±Ëâ≤ÊàñÊ∑∫Ëâ≤‰∏ªÈ°å',
    notifications_title: 'ÈÄöÁü•',
    notifications_desc: 'ÂèñÂæóË®òÂ∏≥ËàáÁõÆÊ®ôÊèêÈÜí',
    data_management: 'Ë≥áÊñôÁÆ°ÁêÜ',
    export_backup: 'ÂåØÂá∫Ë≥áÊñôÂÇô‰ªΩ',
    import_backup: 'ÂåØÂÖ•ÂÇô‰ªΩË≥áÊñô',
    delete_all_data: 'Âà™Èô§ÊâÄÊúâË≥áÊñô',
    delete_confirm_title: 'Âà™Èô§ÊâÄÊúâË≥áÊñô',
    delete_confirm_body: 'Ê≠§Êìç‰ΩúÊúÉÊ∞∏‰πÖÂà™Èô§ÊâÄÊúâÂÑ≤ËìÑÁõÆÊ®ô„ÄÅÊîØÂá∫ËàáÈ†êÁÆóÔºå‰∏îÁÑ°Ê≥ïÂæ©Âéü„ÄÇ',
    help_support: 'Ë™™ÊòéËàáÊîØÊè¥',
    about_title: 'ÈóúÊñº',
    version_label: 'ÁâàÊú¨',
    built_with: '‰ª• ‚ù§Ô∏è Âª∫ÊßãÔºåÂä©ÊÇ®Âª∫Á´ãÊõ¥Â•ΩÁöÑÁêÜË≤°ÁøíÊÖ£',
    savings_goals: 'ÂÑ≤ËìÑÁõÆÊ®ô',
    track_milestones: 'ËøΩËπ§ÊÇ®ÁöÑË≤°ÂãôÈáåÁ®ãÁ¢ë',
    no_savings_goals: 'Â∞öÊú™Âª∫Á´ãÂÑ≤ËìÑÁõÆÊ®ô',
    create_first_goal: 'Âª∫Á´ãÁ¨¨‰∏ÄÂÄãÁõÆÊ®ô',
    // Dashboard / Home
    greeting: 'ÊÇ®Â•Ω',
    financial_overview: 'ÈÄôÊòØÊÇ®ÁöÑË≤°ÂãôÊ¶ÇË¶Ω',
    total_savings: 'Á∏ΩÂÑ≤ËìÑ',
    monthly_budget: 'ÊØèÊúàÈ†êÁÆó',
    spent: 'Â∑≤Ëä±Ë≤ª',
    budget: 'È†êÁÆó',
    savings_goals_progress: 'ÂÑ≤ËìÑÁõÆÊ®ôÈÄ≤Â∫¶',
    smart_tip: 'ÁêÜË≤°Â∞èË≤ºÂ£´',
    recent_expenses: 'ËøëÊúüÊîØÂá∫',
  expense_tracking: 'ÊîØÂá∫ËøΩËπ§',
  monitor_spending: 'Áõ£ÊéßÊÇ®ÁöÑÊ∂àË≤ªÊ®°Âºè',
  add_expense: 'Êñ∞Â¢ûÊîØÂá∫',
  add_first_expense: 'Êñ∞Â¢ûÊÇ®ÁöÑÁ¨¨‰∏ÄÁ≠ÜÊîØÂá∫',
  no_expenses_found: 'Êâæ‰∏çÂà∞ÊîØÂá∫Á¥ÄÈåÑ',
  start_tracking_expenses: 'ÈñãÂßãË®òÂ∏≥‰ª•‰∫ÜËß£ÊÇ®ÁöÑÈå¢Ëä±Âú®Âì™Ë£°ÔºÅ',
  view_history: 'Ê™¢Ë¶ñÊ≠∑Âè≤Á¥ÄÈåÑ',
  description_label: 'ÊèèËø∞',
  amount_label: 'ÈáëÈ°ç',
  category_label: 'È°ûÂà•',
  date_label: 'Êó•Êúü',
  select_category: 'ÈÅ∏ÊìáÈ°ûÂà•',
  all_categories: 'ÊâÄÊúâÈ°ûÂà•',
  add_expense_success_title: 'Â∑≤Ë®òÈåÑÊîØÂá∫ üí≥',
  add_expense_success_desc: ' Â∑≤Ë¢´Ë®òÈåÑ„ÄÇ',
  expense_deleted: 'ÊîØÂá∫Â∑≤Âà™Èô§',
  has_been_removed: 'Â∑≤Ë¢´ÁßªÈô§„ÄÇ',
  this_month: 'Êú¨Êúà',
  total_filtered: 'ÁØ©ÈÅ∏Á∏ΩË®à',
  add_new_goal: 'Âª∫Á´ãÊñ∞ÁõÆÊ®ô',
  create_goal: 'Âª∫Á´ãÁõÆÊ®ô',
  update_goal: 'Êõ¥Êñ∞ÁõÆÊ®ô',
  goal_name: 'ÁõÆÊ®ôÂêçÁ®±',
  target_amount: 'ÁõÆÊ®ôÈáëÈ°ç',
  current_amount: 'ÁõÆÂâçÈáëÈ°ç',
  target_date: 'ÁõÆÊ®ôÊó•Êúü',
  add_amount_prompt: 'Ëº∏ÂÖ•Ë¶ÅÊñ∞Â¢ûÁöÑÈáëÈ°çÔºö',
  progress: 'ÈÄ≤Â∫¶',
  goal_completed: 'ÁõÆÊ®ôÂÆåÊàêÔºÅ üéâ',
  progress_updated: 'ÈÄ≤Â∫¶Â∑≤Êõ¥Êñ∞ÔºÅ üí∞',
  congrats_reached: 'ÊÅ≠ÂñúÔºÅÊÇ®Â∑≤ÈÅîÊàê„Äå{name}„ÄçÁõÆÊ®ôÔºÅ',
  added_amount: 'Êñ∞Â¢û',
  to_goal: 'Âà∞',
  has_been_updated: 'Â∑≤ÊàêÂäüÊõ¥Êñ∞„ÄÇ',
  food_and_dining: 'È§êÈ£≤',
  transport: '‰∫§ÈÄö',
  entertainment: 'Â®õÊ®Ç',
  shopping: 'Ë≥ºÁâ©',
  bills_utilities: 'Â∏≥ÂñÆËàáÂÖ¨Áî®‰∫ãÊ•≠',
  healthcare: 'ÈÜ´ÁôÇ',
  education: 'ÊïôËÇ≤',
  other: 'ÂÖ∂‰ªñ',
  category: 'È°ûÂà•',
  budget_management: 'È†êÁÆóÁÆ°ÁêÜ',
  control_monthly_spending: 'ÊéßÂà∂ÊÇ®ÁöÑÊØèÊúàÊîØÂá∫',
  create_new_budget: 'Âª∫Á´ãÊñ∞È†êÁÆó',
  no_budgets_set: 'Â∞öÊú™Ë®≠ÂÆöÈ†êÁÆó',
  create_first_budget: 'Âª∫Á´ãÊÇ®ÁöÑÁ¨¨‰∏ÄÂÄãÈ†êÁÆó',
  add_budget: 'Êñ∞Â¢ûÈ†êÁÆó',
  view_reports: 'Ê™¢Ë¶ñÂ†±Ë°®',
  potential_annual_savings: 'ÊΩõÂú®Âπ¥ÁØÄÁúÅ',
  insights: 'Ê¥ûÂØü',
  monthly_impact: 'ÊØèÊúàÂΩ±Èüø',
  time_saved: 'ÁØÄÁúÅÊôÇÈñì',
  page_not_found: 'È†ÅÈù¢Êâæ‰∏çÂà∞',
  return_home: 'ÂõûÂà∞È¶ñÈ†Å',
  monthly_impact_label: 'ÊØèÊúàÂΩ±Èüø',
  time_saved_label: 'ÊôÇÈñìÁØÄÁúÅ',
  view_all_insights: 'Êü•ÁúãÂÖ®ÈÉ® {n} ÂâáÊ¥ûÂØü',
  
  ai_advisor_title: 'AI ÁêÜË≤°È°ßÂïè',
  ai_advisor_desc: 'ÂèñÂæóÂÄã‰∫∫ÂåñÁöÑÂÑ≤ËìÑÂª∫Ë≠∞',
  ai_welcome: 'Ê≠°Ëøé‰ΩøÁî® AI ÁêÜË≤°È°ßÂïèÔºÅ',
  ai_welcome_desc: 'ÂêëÊàëË©¢ÂïèÊúâÈóúÂÑ≤ËìÑË®àÁï´„ÄÅÈ†êÁÆóÊàñÁêÜË≤°ÁõÆÊ®ôÁöÑ‰ªª‰ΩïÂïèÈ°å„ÄÇÊàëÊúÉÂàÜÊûêÊÇ®ÁöÑË≥áÊñô‰∏¶Êèê‰æõÂÄã‰∫∫ÂåñÂª∫Ë≠∞„ÄÇ',
  welcome_smart_planning_title: 'Ê≠°Ëøé‰ΩøÁî® Êô∫ÊÖßÁêÜË≤°Ë¶èÂäÉÔºÅ',
  welcome_smart_planning_msg: 'ÂÖàË®òÈåÑÂπæÂ§©ÁöÑÊî∂ÂÖ•ËàáÊîØÂá∫ÔºåÊàëÊúÉÊ†πÊìö‰Ω†ÁöÑË≥áÊñôÊèê‰æõÂÄã‰∫∫ÂåñÂª∫Ë≠∞„ÄÇ',
  onboarding_action_1: 'Êñ∞Â¢û‰Ω†ÁöÑÊØèÊúàÊî∂ÂÖ•',
  onboarding_action_2: 'Ë®òÈåÑ‰∏ÄÈÄ±ÁöÑÊó•Â∏∏ÊîØÂá∫',
  onboarding_action_3: 'Ë®≠ÂÆö‰Ω†ÁöÑÁ¨¨‰∏ÄÂÄãÂÑ≤ËìÑÁõÆÊ®ô',
  try_asking: 'Ë©¶ËëóÂïèÔºö',
  ai_is_thinking: 'AI ÊÄùËÄÉ‰∏≠...',
  ai_no_data: 'Êñ∞Â¢û‰∏Ä‰∫õÊîØÂá∫ËàáÊî∂ÂÖ•‰ª•Áç≤ÂèñÂÄã‰∫∫ÂåñÂª∫Ë≠∞ÔºÅ',
  generate_advice: 'Áî¢ÁîüÂª∫Ë≠∞',
  priority_high: 'È´ò',
  priority_medium: '‰∏≠',
  priority_low: '‰Ωé',
    create_new_goal: 'Âª∫Á´ãÊñ∞ÁõÆÊ®ô',
    goal_created_title: 'ÁõÆÊ®ôÂª∫Á´ãÊàêÂäü! üéØ',
    goal_created_desc: 'Â∑≤Âä†ÂÖ•ÊÇ®ÁöÑÂÑ≤ËìÑÁõÆÊ®ô„ÄÇ',
    goal_updated_title: 'ÁõÆÊ®ôÂ∑≤Êõ¥Êñ∞ ‚úèÔ∏è',
    goal_deleted_title: 'ÁõÆÊ®ôÂ∑≤Âà™Èô§',
    progress_label: 'ÈÄ≤Â∫¶',
    overdue: 'Â∑≤ÈÄæÊúü',
    days_left: '{n} Â§©',
    add_50: '+$50',
    add_100: '+$100',
    custom: 'Ëá™Ë®Ç',
    projection_title: 'Êú™‰æÜÈ†ê‰º∞Áç≤Âà©ÂàÜÊûê',
    principal: 'ÁõÆÂâçÊú¨Èáë',
    monthly: 'ÊØèÊúàÊäïÂÖ•',
    rate: 'Âπ¥ÂåñÂ†±ÈÖ¨Áéá (‰æãÂ¶Ç 0.05 = 5%)',
    years: 'ÊäïË≥áÂπ¥Èôê (Âπ¥)',
    goal_amount: 'ÁõÆÊ®ôÈáëÈ°ç (ÈÅ∏Â°´)',
    savings_rate: 'ÂÑ≤ËìÑÁéá (0-1, ÈÅ∏Â°´)',
    emergency_months: 'Á∑äÊÄ•ÂÇôÁî®ÈáëÔºàÊúàÊï∏, ÈÅ∏Â°´Ôºâ',
    monthly_living: 'ÊØèÊúàÁîüÊ¥ªË≤ª (ÈÅ∏Â°´)',
    run: 'Ë®àÁÆóÈ†ê‰º∞',
    formula: 'ÂÖ¨Âºè',
    estimated_future_value: 'È†ê‰º∞Êú™‰æÜÂÉπÂÄº',
    generated_at: 'Áî¢ÁîüÊôÇÈñì',
    recommendation: 'Âª∫Ë≠∞',
    settings_language: 'Ë™ûË®Ä',
    language_en: 'English',
    language_zh: '‰∏≠Êñá'
    ,
    rec_overview: 'Ê†πÊìöÁï∂ÂâçË¶èÂäÉÔºåÊÇ®Âú®ÁõÆÊ®ôÊúüÈôêÂÖßÈ†ê‰º∞ÊúâÁ¥Ñ {value} ÂÖÉÔºåÈÅîÊàêÁéáÁ¥ÑÁÇ∫ {percent}%„ÄÇ',
    rec_savings_low: 'Ë≠¶ÂëäÔºöÂÑ≤ËìÑÁéáÂÅè‰ΩéÔºåÂª∫Ë≠∞Ê™¢Ë¶ñÈùûÂøÖË¶ÅÈñãÈä∑',
    rec_savings_ok: 'ËâØÂ•ΩÔºöÂÑ≤ËìÑÁéáÂÅ•Â∫∑ÔºåË´ãÁπºÁ∫å‰øùÊåÅÔºÅ',
    rec_emergency_low: 'Âª∫Ë≠∞ÂÑ™ÂÖàË£úË∂≥Á∑äÊÄ•ÂÇôÁî®Èáë',
    rec_emergency_ok: 'Á∑äÊÄ•ÂÇôÁî®ÈáëÂÖÖË∂≥ÔºåÂèØÂ∞áÂ§öÈ§òË≥áÈáëÊäïÂÖ•ÊäïË≥á'
    ,
  // AI advice messages
  rec_boost_title: 'ÊèêÈ´ò‰Ω†ÁöÑÂÑ≤ËìÑÁéá',
  rec_boost_msg: '‰Ω†ÁõÆÂâçÁöÑÂÑ≤ËìÑ‰ΩîÊî∂ÂÖ•ÁöÑ {savings}%„ÄÇÂ∞àÂÆ∂Âª∫Ë≠∞Ëá≥Â∞ëÂÑ≤ËìÑ {target}%„ÄÇ\n‰Ω†ÊØèÊúàÈúÄË¶ÅÊ∏õÂ∞ëÊîØÂá∫ {needed} ÊâçËÉΩÈÅîÂà∞Ê≠§ÁõÆÊ®ô„ÄÇ',
  action_review_largest_categories: 'Ê™¢Ë¶ñÊ∂àË≤ªÊúÄÂ§öÁöÑÈ°ûÂà•',
  action_cancel_subscriptions: 'ÂèñÊ∂àÊú™‰ΩøÁî®ÁöÑË®ÇÈñ±',
  action_cook_at_home: 'Â§öÂú®ÂÆ∂Ë£°ÁÉπÈ£™',
  action_auto_savings: 'Ë®≠ÂÆöËá™ÂãïËΩâÂ∏≥Âà∞ÂÑ≤ËìÑÂ∏≥Êà∂',

  rec_spending_increase_title: 'ÊîØÂá∫Â¢ûÂä†Ë≠¶Á§∫',
  rec_spending_increase_msg: 'ÊÇ®ÁöÑÊîØÂá∫ÊØî‰∏äÂÄãÊúàÂ¢ûÂä†‰∫Ü {increase}Ôºà{percent}%ÔºâÔºåË´ãÊâæÂá∫ËÆäÂåñÂéüÂõ†„ÄÇ',
  action_review_recent_purchases: 'Ê™¢Ë¶ñËøëÊúüË≥ºË≤∑È†ÖÁõÆ',
  action_identify_one_time: 'ÂçÄÂàÜ‰∏ÄÊ¨°ÊÄßËàáÊåÅÁ∫åÊÄßÊîØÂá∫Â¢ûÂä†',
  action_set_spending_alerts: 'ÁÇ∫‰∏ªË¶ÅÈ°ûÂà•Ë®≠ÂÆöÊîØÂá∫Ë≠¶Á§∫',

  rec_goal_timeline_title: '{name} ÁõÆÊ®ôÊôÇÈñìÈ¢®Èö™',
  rec_goal_timeline_msg: 'Ë¶ÅÂú® {date} ÂâçÈÅîÊàê {name}ÔºåÊÇ®ÈúÄÊØèÊúàÂÑ≤ËìÑ {required}„ÄÇÊÇ®ÁõÆÂâçÊØèÊúàÂÑ≤ËìÑ {current}ÔºåÈÇÑÈúÄÈ°çÂ§ñ {shortfall}„ÄÇ',
  action_reduce_shortfall: 'ÊØèÊúàÊ∏õÂ∞ëÊîØÂá∫ {shortfall}',
  action_extend_deadline: 'ËÄÉÊÖÆÂª∂Èï∑ÁõÆÊ®ôÊúüÈôê',
  action_find_income: 'Â∞ãÊâæÈ°çÂ§ñÊî∂ÂÖ•‰æÜÊ∫ê',

  rec_goal_ahead_title: '{name} ÊèêÂâçÈÅîÊàêÔºÅ',
  rec_goal_ahead_msg: 'Â•ΩÊ∂àÊÅØÔºÅÊÇ®ÊúâÊ©üÊúÉÊèêÂâçÈÅîÊàê {name}ÔºåÂèØËÄÉÊÖÆÊèêÈ´òÁõÆÊ®ôÊàñÈñãÂßãÊñ∞ÁõÆÊ®ô„ÄÇ',

  rec_budget_exceeded_title: '{category} È°ûÂà•È†êÁÆóË∂ÖÊîØ',
  rec_budget_exceeded_msg: 'ÊÇ®Âú® {category} È°ûÂà•Êú¨ÊúàË∂ÖÊîØ {overBudget}„ÄÇÈ†êÁÆóÁÇ∫ {budget}ÔºåÂØ¶ÈöõÊîØÂá∫ÁÇ∫ {spent}„ÄÇ',
  action_budget_set_alerts: 'ÁÇ∫ {category} È°ûÂà•Ë®≠ÂÆö 80% ÁöÑÊîØÂá∫Ë≠¶Á§∫',
  action_reduce_nonessential: 'Ê™¢Ë¶ñ‰∏¶Ê∏õÂ∞ëÈùûÂøÖË¶ÅÊ∂àË≤ª',
  action_find_cheaper_alternatives: 'Â∞ãÊâæÊõ¥‰æøÂÆúÁöÑÊõø‰ª£ÊñπÊ°à',

  rec_budget_imbalance_title: 'È†êÁÆóËàáÊî∂ÂÖ•Â§±Ë°°',
  rec_budget_imbalance_msg: 'ÊÇ®ÁöÑÁ∏ΩÈ†êÁÆó ({total}) ÁÇ∫Êî∂ÂÖ•ÁöÑ {percent}%ÔºåÂèØÁî®ÊñºÂÑ≤ËìÑËàáÈ†êÂÇôÈáëÁöÑÁ©∫ÈñìÊúâÈôê„ÄÇ',

  rec_category_high_title: '{category} È°ûÂà•ÊîØÂá∫ÂÅèÈ´ò',
  rec_category_high_msg: 'ÊÇ®ÁöÑ {category} ÊîØÂá∫ ({amount}) ÊØî‰∏ÄËà¨Ê∞¥Ê∫ñÈ´òÂá∫ {percent}„ÄÇËã•Èôç‰Ωé {reduction}%ÔºåÊØèÊúàÂèØÁØÄÁúÅÁ¥Ñ {potential}„ÄÇ',
    // Income input
    monthly_income_title: 'ÊØèÊúàÊî∂ÂÖ•',
    add_income_button: 'Êñ∞Â¢ûÊî∂ÂÖ•',
    edit_income_title: 'Á∑®ËºØÊî∂ÂÖ•',
    add_income_title: 'Êñ∞Â¢ûÊî∂ÂÖ•‰æÜÊ∫ê',
    income_source_label: 'Êî∂ÂÖ•‰æÜÊ∫ê',
    source_placeholder: '‰æãÂ¶ÇÔºöËñ™Ê∞¥„ÄÅÊé•Ê°à„ÄÅÂâØÊ•≠',
    monthly_amount_label: 'ÊØèÊúàÈáëÈ°ç',
    amount_placeholder: '0.00',
    recurring_label: 'ÊØèÊúàÂÆöÊúüÊî∂ÂÖ•',
    recurring_badge: 'ÂÆöÊúü',
    total_monthly_income: 'ÊØèÊúàÁ∏ΩÊî∂ÂÖ•',
    cancel: 'ÂèñÊ∂à',
    add_income_action: 'Êñ∞Â¢ûÊî∂ÂÖ•',
    update_income_action: 'Êõ¥Êñ∞Êî∂ÂÖ•',
    income_empty_hint: 'Êñ∞Â¢û‰Ω†ÁöÑÊî∂ÂÖ•‰æÜÊ∫ê‰ª•Áç≤ÂæóÊõ¥Â•ΩÁöÑË≤°ÂãôÊ¥ûÂØü',
    income_fill_all_fields: 'Ë´ãÂ°´ÂØ´ÊâÄÊúâÊ¨Ñ‰Ωç',
    income_amount_gt_zero: 'ÈáëÈ°çÂøÖÈ†àÂ§ßÊñº 0',
    income_updated: 'Êî∂ÂÖ•Â∑≤Êõ¥Êñ∞',
    income_added: 'Êî∂ÂÖ•Â∑≤Êñ∞Â¢û',
    income_deleted: 'Êî∂ÂÖ•Â∑≤Âà™Èô§',
    currency_unit: 'ÂÖÉ',
    language_updated: 'Ë™ûË®ÄÂ∑≤Êõ¥Êñ∞'
    ,
  // Expense chart / pie
  expense_chart_title: 'ÊîØÂá∫È°ûÂà•ÂàÜ‰Ωà',
  no_expense_data: 'Ê≤íÊúâÊîØÂá∫Ë≥áÊñô',
  start_logging_expenses: 'ÈñãÂßãË®òÈåÑÊîØÂá∫‰ª•Êü•ÁúãÊ∂àË≤ªÊòéÁ¥∞',
  percent_of_total: '(‰ΩîÁ∏ΩÈ°ç {percent}%)',
  categories_label: 'È°ûÂà•',
  largest_category_label: 'ÊúÄÂ§ßÈ°ûÂà•',
  total_label: 'Á∏ΩË®àÔºö{value}',
    action_food_1: 'ÊØèÈÄ±Âú®ÂÆ∂ÁÖÆ 2-3 Ê¨°',
    action_food_2: 'Ë¶èÂäÉÈ§êÂñÆ‰∏¶ÂàóË≥ºÁâ©Ê∏ÖÂñÆ',
    action_food_3: 'Ë≥ºË≤∑Ëá™ÊúâÂìÅÁâå‰∏¶Ê≥®ÊÑè‰øÉÈä∑',
    action_food_4: 'Ê∏õÂ∞ëÂ§ñÈ£üËàáÂ§ñÂ∏∂Ê¨°Êï∏',

    action_transport_1: 'ËÉΩËµ∞Ë∑ØÊàñÈ®éËªäÂ∞±Áõ°Èáè‰ΩøÁî®',
    action_transport_2: 'Âêà‰ΩµË∑ëËÖø‰ª•Ê∏õÂ∞ëË°åÁ®ã',
    action_transport_3: 'ËÄÉÊÖÆÂÖ±‰πòÊàñÂêà‰πòÈÅ∏È†Ö',
    action_transport_4: 'ÂÆöÊúü‰øùÈ§ä‰ª•ÊèêÂçáËªäËºõÊ≤πËÄóË°®Áèæ',

    action_entertainment_1: 'Â∞ãÊâæÂÖçË≤ªÁ§æÂçÄÊ¥ªÂãï',
    action_entertainment_2: '‰ΩøÁî®‰∏≤ÊµÅÊúçÂãôÊõø‰ª£ÈõªÂΩ±Èô¢',
    action_entertainment_3: 'ËàâËæ¶ÂÖ±‰∫´È§êÊúÉ‰ª£ÊõøÂ§ñÂá∫',
    action_entertainment_4: 'Âà©Áî®Âø´Ê®ÇÊôÇÂÖâÊàñÊäòÊâ£',

    action_shopping_1: 'ÈùûÂøÖË¶ÅË≥ºÁâ©Êé°Áî® 24 Â∞èÊôÇÂÜ∑ÈùúÊúü',
    action_shopping_2: 'ÂàóÊ∏ÖÂñÆ‰∏¶Â†ÖÊåÅË≥ºÁâ©Ê∏ÖÂñÆ',
    action_shopping_3: 'ÊØîËºÉÂÉπÊ†º‰∏¶Â∞ãÊâæÊäòÊâ£',
    action_shopping_4: 'Ë≥ºË≤∑ËÄêÁî®‰∏îÂÖ∑ÊÄßÂÉπÊØîÁöÑÂïÜÂìÅ',

    action_bills_1: 'Ê™¢Ë¶ñ‰∏¶ÂèñÊ∂àÊú™‰ΩøÁî®ÁöÑË®ÇÈñ±',
    action_bills_2: 'ËàáÊúçÂãô‰æõÊáâÂïÜË≠∞ÂÉπ‰ª•Áç≤ÂæóÊõ¥Â•ΩË≤ªÁéá',
    action_bills_3: 'ÊîπÁî®ÁØÄËÉΩÈõªÂô®‰ª•Èôç‰ΩéÈï∑ÊúüËä±Ë≤ª',
    action_bills_4: 'ËÄÉÊÖÆÊï¥ÂêàÊúçÂãô‰ª•Áç≤ÂæóÊäòÊâ£',

    action_healthcare_1: '‰ª•È†êÈò≤ÈÜ´ÁôÇÈôç‰ΩéÊú™‰æÜÂ§ßÈ°çÊîØÂá∫',
    action_healthcare_2: 'ÊØîËºÉËó•ÂìÅËàáÈÜ´ÁôÇÁ®ãÂ∫èÂÉπÊ†º',
    action_healthcare_3: 'ÂèØÁî®ÊôÇÈÅ∏Êìá‰ªøÂñÆËó•ÂìÅ',
    action_healthcare_4: 'ÂñÑÁî®‰øùÈö™Áµ¶‰ªò‰ª•Èôç‰ΩéËá™‰ªò',

    action_education_1: 'Â∞ãÊâæÂÖçË≤ªÁ∑ö‰∏äË™≤Á®ãËàáË≥áÊ∫ê',
    action_education_2: 'Ë≥ºË≤∑‰∫åÊâãÊïôÁßëÊõ∏ÊàñÁßüÂÄü',
    action_education_3: 'Áî≥Ë´ãÁçéÂ≠∏ÈáëÊàñË£úÂä©',
    action_education_4: 'Âà©Áî®Èõá‰∏ªÁöÑÊïôËÇ≤Á¶èÂà©',

    action_other_1: 'Â∞áÈõ∂Êï£ÊîØÂá∫ÂàÜÈ°û‰ª•ÊâæÂá∫Ê®°Âºè',
    action_other_2: 'ÁÇ∫ÈõúÈ†ÖÊîØÂá∫Ë®≠ÂÆöÊØèÊúà‰∏äÈôê',
    action_other_3: 'ÂÆöÊúüÊ™¢Êü•Âë®ÊúüÊÄßÊâ£Ê¨æ',
    action_other_4: 'Ê™¢Ë¶ñÊØèÁ≠ÜËä±Ë≤ªÊòØÂê¶ÂøÖË¶Å',
  }
};

// Additional AI service keys
strings.en.ai_savings_intro = 'üí∞ To save more money, start with your {category} category where you spend {amount} monthly. {tip}';
strings.en.ai_savings_potential = 'üéØ Potential savings: {potential} per month, {annual} annually.';
strings.en.ai_savings_start_small = 'üìà Start small - even saving a small amount each week can make a difference.';
strings.en.ai_savings_default_tip = 'Consider reducing discretionary spending by 10-15%.';

strings.en.ai_budget_overage = '‚ö†Ô∏è You\'re currently spending {overage} over your monthly budget of {budgetTotal}.\n\nüîß Here\'s how to get back on track:\n‚Ä¢ Review your largest expense categories and identify areas to cut back\n‚Ä¢ Set up spending alerts when you\'re 80% through each budget category\n‚Ä¢ Consider the 50/30/20 rule: 50% needs, 30% wants, 20% savings\n\nüí° Small daily adjustments can help you save {daily} per day to stay within budget.';
strings.en.ai_budget_within = '‚úÖ Great job staying within your {budgetTotal} monthly budget! You\'re spending {totalMonthly}, leaving you with {surplus} extra.\n\nüöÄ Consider allocating this surplus to:\n‚Ä¢ Emergency fund (aim for 3-6 months of expenses)\n‚Ä¢ Retirement savings\n‚Ä¢ Your highest priority savings goal\n\nüìä You\'re showing excellent financial discipline - keep it up!';

strings.en.ai_goal_none = 'üéØ You haven\'t set any savings goals yet. Consider starting with an emergency fund of {emergency} for 3 months of expenses. Set specific, time-bound goals and track progress.';
strings.en.ai_goal_active = 'üéØ You have {count} active savings goal(s) totaling {totalNeeded}.\n\n‚è∞ At a 20% savings rate ({monthlySavings}/month), you could achieve all goals in approximately {monthsToGoal} months.\n\nüí™ You\'re {pct}% of the way there!';
strings.en.ai_goal_completed = 'üéâ Congratulations! You\'ve achieved all your savings goals. Time to set new, bigger targets!';

strings.en.ai_category_no_data = 'üìä No expense data yet. Start tracking expenses to get personalized category advice.';
strings.en.ai_category_summary = 'üìà Your top spending categories this month:\n\n{topList}\n\nüí° Category optimization tips:\n{tips}\n\nüéØ Focus on reducing your top category by 10% first - that\'s {savings} in monthly savings!';
strings.en.ai_cat_tip_1 = 'Look for alternatives or negotiate better rates';
strings.en.ai_cat_tip_2 = 'Set a weekly spending limit to stay conscious';
strings.en.ai_cat_tip_3 = 'Track each transaction to identify patterns';

strings.en.ai_plan_intro = 'üìã Personalized savings plan:\n\nüéØ Monthly Savings Target: {monthlyTarget}\n\nüìä Priority Order:\n1. Emergency Fund: {emergency}\n2. {yourGoals}\n3. Long-term investments\n\n‚ö° Quick Wins:\n‚Ä¢ Automate savings transfers on payday\n‚Ä¢ Use the 24-hour rule for purchases over $50\n‚Ä¢ Review and cancel unused subscriptions monthly\n‚Ä¢ Cook at home 1-2 extra times per week\n\nüîÑ Monthly Review: Track progress and adjust strategy.';
strings.en.ai_plan_no_goals = 'Set specific savings goals';

strings.en.ai_general_overview = 'üìä Financial Health Overview\n\nüí∞ Monthly Spending: {totalMonthly}\nüéØ Savings Goals: {goalsCount} ({achievedGoals} completed)\nüìã Active Budgets: {budgetsCount}\n\nüí° Key Recommendations:\n‚Ä¢ Maintain emergency fund of {emergency}\n‚Ä¢ Save 20-30% of income when possible\n‚Ä¢ Review spending monthly and adjust as needed\n\nAsk me anything specific about your finances! ü§ù';

strings.zh.expense_categories = 'ÊîØÂá∫ÂàÜÈ°û';
strings.zh.ai_savings_intro = 'üí∞ Ëã•Ë¶ÅÂ¢ûÂä†ÂÑ≤ËìÑÔºåÂèØÂæû„Äå{category}„ÄçÈ°ûÂà•ËëóÊâãÔºåÊÇ®ÊØèÊúàÂú®Ê≠§È°ûÂà•Ëä±Ë≤ª {amount}„ÄÇ{tip}';
strings.zh.ai_savings_potential = 'üéØ ÊΩõÂú®ÁØÄÁúÅÔºöÊØèÊúà {potential}ÔºåÊØèÂπ¥ {annual}„ÄÇ';
strings.zh.ai_savings_start_small = 'üìà ÂæûÂ∞èËôïÈñãÂßã ‚Äî ÊØèÈÄ±Â∞ëËä± $5-10 ‰πüËÉΩÂ∏∂‰æÜÈï∑ÊúüÂ∑ÆÁï∞„ÄÇ';
strings.zh.ai_savings_default_tip = 'ÂèØËÄÉÊÖÆÂ∞áÂèØËá™Áî±ÊîØÈÖçÊîØÂá∫Ê∏õÂ∞ë 10-15%„ÄÇ';

strings.zh.ai_budget_overage = '‚ö†Ô∏è ÊÇ®ÁõÆÂâçË∂ÖÂá∫È†êÁÆó {overage}ÔºàÈ†êÁÆó {budgetTotal}Ôºâ„ÄÇ\n\nüîß Âª∫Ë≠∞ÂõûÂà∞Ê≠£ËªåÔºö\n‚Ä¢ Ê™¢Ë¶ñÊúÄÈ´òÊîØÂá∫È°ûÂà•‰∏¶ÊâæÂá∫ÂèØÂâäÊ∏õÈ†ÖÁõÆ\n‚Ä¢ Âú®È°ûÂà•Ê∂àËÄóÂà∞ 80% ÊôÇË®≠ÂÆöË≠¶Á§∫\n‚Ä¢ ËÄÉÊÖÆ 50/30/20 Ë¶èÂâáÔºà50% ÈúÄÊ±Ç„ÄÅ30% ÊÉ≥Êúõ„ÄÅ20% ÂÑ≤ËìÑÔºâ\n\nüí° Ëã•Ë¶ÅÂõûÂà∞È†êÁÆóÔºåÊØèÂ§©ÂÉÖÈúÄÁØÄÁúÅ {daily}„ÄÇ';
strings.zh.ai_budget_within = '‚úÖ ÊÅ≠ÂñúÊÇ®Âú®ÊØèÊúà {budgetTotal} ÁöÑÈ†êÁÆóÂÖßÔºÅÊÇ®ÁõÆÂâçËä±Ë≤ª {totalMonthly}ÔºåÂâ©È§ò {surplus}„ÄÇ\n\nüöÄ Âª∫Ë≠∞ÂàÜÈÖçÂâ©È§òÈáëÈ°çÔºö\n‚Ä¢ Á∑äÊÄ•ÂÇôÁî®ÈáëÔºàÁõÆÊ®ô 3-6 ÂÄãÊúàÔºâ\n‚Ä¢ ÈÄÄ‰ºëÂÑ≤ËìÑ\n‚Ä¢ ÊÇ®ÂÑ™ÂÖàÁöÑÂÑ≤ËìÑÁõÆÊ®ô\n\nüìä ÊÇ®ÁöÑÁêÜË≤°Á¥ÄÂæãË°®ÁèæÂÑ™ÁßÄÔºåË´ãÁπºÁ∫å‰øùÊåÅÔºÅ';

strings.zh.ai_goal_none = 'üéØ ÊÇ®Â∞öÊú™Ë®≠ÂÆöÂÑ≤ËìÑÁõÆÊ®ô„ÄÇÂª∫Ë≠∞ÂÖàÂª∫Á´ãÁ∑äÊÄ•ÂÇôÁî®ÈáëÔºåÁõÆÊ®ôÁÇ∫ {emergency}Ôºà3 ÂÄãÊúàÁîüÊ¥ªË≤ªÔºâ„ÄÇË®≠ÂÆöÂÖ∑È´î‰∏îÊúâÊôÇÈôêÁöÑÁõÆÊ®ô‰∏¶ËøΩËπ§ÈÄ≤Â∫¶„ÄÇ';
strings.zh.ai_goal_active = 'üéØ ÊÇ®Êúâ {count} ÂÄãÈÄ≤Ë°å‰∏≠ÁöÑÂÑ≤ËìÑÁõÆÊ®ôÔºåÁ∏ΩË®à {totalNeeded}„ÄÇ\n\n‚è∞ ‰ª• 20% ÁöÑÂÑ≤ËìÑÁéáÔºà{monthlySavings} / ÊúàÔºâÔºåÂ§ßÁ¥ÑÂèØÂú® {monthsToGoal} ÂÄãÊúàÂÖßÈÅîÊàê„ÄÇ\n\nüí™ ÊÇ®Â∑≤ÈÅîÊàê {pct}%ÔºÅ';
strings.zh.ai_goal_completed = 'üéâ ÊÅ≠ÂñúÔºÅÊÇ®Â∑≤ÈÅîÊàêÊâÄÊúâÂÑ≤ËìÑÁõÆÊ®ô„ÄÇÊòØÊôÇÂÄôË®≠ÂÆöÊñ∞ÁöÑ„ÄÅÊõ¥Â§ßÁöÑÁõÆÊ®ô‰∫ÜÔºÅ';

strings.zh.ai_category_no_data = 'üìä Â∞öÁÑ°ÊîØÂá∫Ë≥áÊñôÔºåË´ãÈñãÂßãË®òÂ∏≥‰ª•ÂèñÂæóÂÄã‰∫∫ÂåñÈ°ûÂà•Âª∫Ë≠∞„ÄÇ';
strings.zh.ai_category_summary = 'üìà Êú¨ÊúàÊÇ®ÁöÑ‰∏ªË¶ÅÊîØÂá∫È°ûÂà•Ôºö\n\n{topList}\n\nüí° È°ûÂà•ÂÑ™ÂåñÂª∫Ë≠∞Ôºö\n{tips}\n\nüéØ È¶ñÂÖàÂ∞áÊúÄÈ´òÊîØÂá∫È°ûÂà•Èôç‰Ωé 10%ÔºåÊØèÊúàÂèØÁØÄÁúÅÁ¥Ñ {savings}„ÄÇ';
strings.zh.ai_cat_tip_1 = 'Â∞ãÊâæÊõø‰ª£ÈÅ∏È†ÖÊàñË≠∞ÂÉπ‰ª•Èôç‰ΩéË≤ªÁî®';
strings.zh.ai_cat_tip_2 = 'Ë®≠ÂÆöÊØèÈÄ±ÊîØÂá∫‰∏äÈôê‰ª•ÊèêÈ´òÊÑèË≠ò';
strings.zh.ai_cat_tip_3 = 'ËøΩËπ§ÊØèÁ≠Ü‰∫§Êòì‰ª•ÊâæÂá∫Ê®°Âºè';

strings.zh.ai_plan_intro = 'üìã ÊÇ®ÁöÑÁêÜË≤°Ë®àÁï´Ôºö\n\nüéØ ÊØèÊúàÂÑ≤ËìÑÁõÆÊ®ôÔºö{monthlyTarget}\n\nüìä ÂÑ™ÂÖàÈ†ÜÂ∫èÔºö\n1. Á∑äÊÄ•ÂÇôÁî®ÈáëÔºö{emergency}\n2. {yourGoals}\n3. Èï∑ÊúüÊäïË≥á\n\n‚ö° Âø´ÈÄüÂÖ•ÈñÄÔºö\n‚Ä¢ Âú®ÁôºËñ™Êó•Ëá™ÂãïËΩâÂ∏≥ÂÑ≤ËìÑ\n‚Ä¢ Ë∂ÖÈÅé $50 ÁöÑË≥ºË≤∑‰ΩøÁî® 24 Â∞èÊôÇÂéüÂâá\n‚Ä¢ ÊØèÊúàÊ™¢Ë¶ñ‰∏¶ÂèñÊ∂àÊú™‰ΩøÁî®ÁöÑË®ÇÈñ±\n‚Ä¢ ÊØèÈÄ±Â§öÂú®ÂÆ∂ÁÖÆ 1-2 Ê¨°\n\nüîÑ ÊØèÊúàÊ™¢Ë¶ñÔºöËøΩËπ§‰∏¶Ë™øÊï¥Á≠ñÁï•„ÄÇ';
strings.zh.ai_plan_no_goals = 'Â∞öÊú™Ë®≠ÂÆöÂÖ∑È´îÂÑ≤ËìÑÁõÆÊ®ô';

strings.zh.ai_general_overview = 'üìä Ë≤°ÂãôÂÅ•Â∫∑Á∏ΩË¶Ω\n\nüí∞ ÊØèÊúàÊîØÂá∫Ôºö{totalMonthly}\nüéØ ÂÑ≤ËìÑÁõÆÊ®ôÔºö{goalsCount}ÔºàÂ∑≤ÈÅîÊàê {achievedGoals}Ôºâ\nüìã ÊúâÊïàÈ†êÁÆóÊï∏Ôºö{budgetsCount}\n\nüí° Âª∫Ë≠∞Ôºö\n‚Ä¢ Á∂≠ÊåÅÁ∑äÊÄ•ÂÇôÁî®Èáë {emergency}\n‚Ä¢ ÂÑòÂèØËÉΩÂÑ≤ËìÑ 20-30%\n‚Ä¢ ÊØèÊúàÊ™¢Ë¶ñÊîØÂá∫‰∏¶Ë™øÊï¥\n\nËã•ÈúÄÊõ¥Ë©≥Á¥∞Âª∫Ë≠∞ÔºåË´ãÂëäË®¥ÊàëÂÖ∑È´îÂïèÈ°åÔºÅ ü§ù';

interface TranslationParams {
  [key: string]: string | number;
}

export const t = (key: string, params?: TranslationParams): string => {
  const lang = languageStorage.get();
  let text = strings[lang][key] || strings['en'][key] || key;
  if (params) {
    Object.entries(params).forEach(([key, value]) => {
      text = text.replace(`{${key}}`, String(value));
    });
  }
  return text;
};

export const setLanguage = (lang: Lang) => languageStorage.set(lang);

export default { t, setLanguage };
